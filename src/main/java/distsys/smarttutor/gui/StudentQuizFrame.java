/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package distsys.smarttutor.gui;

import io.grpc.stub.StreamObserver;
import generated.grpc.smarttutor.StudentQuizServiceGrpc;
import generated.grpc.smarttutor.QuizAnswers;
import generated.grpc.smarttutor.QuizQuestions;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import javax.swing.JOptionPane;

/**
 *
 * @author bruol
 */
public class StudentQuizFrame extends javax.swing.JFrame {

    private ManagedChannel channel;
    private StudentQuizServiceGrpc.StudentQuizServiceStub stub;

    private StreamObserver<QuizQuestions> requestObserver;

    private boolean awaitingAnswer = false;
    private boolean firstQuestionReceived = false;

    /**
     * Creates new form StudentQuizFrame
     */
    public StudentQuizFrame() {
        initComponents();

        channel = ManagedChannelBuilder.forAddress("localhost", 50051)
                .usePlaintext()
                .build();
        stub = StudentQuizServiceGrpc.newStub(channel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startQuiz = new javax.swing.JButton();
        notReadyQuiz = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        quizQuestions = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        quizAnswer = new javax.swing.JTextField();
        sendAnswerQuiz = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quiz");
        setBackground(new java.awt.Color(212, 148, 157));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        jLabel1.setText("General Knowledge Quiz");

        jLabel2.setText("Ready to play?");

        startQuiz.setBackground(new java.awt.Color(185, 203, 225));
        startQuiz.setText("Yes");
        startQuiz.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startQuizActionPerformed(evt);
            }
        });

        notReadyQuiz.setBackground(new java.awt.Color(255, 231, 231));
        notReadyQuiz.setText("No");
        notReadyQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notReadyQuizActionPerformed(evt);
            }
        });

        jLabel3.setText("Quiz Question:");

        jLabel4.setText("Answer:");

        quizAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizAnswerActionPerformed(evt);
            }
        });

        sendAnswerQuiz.setText("Send");
        sendAnswerQuiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendAnswerQuizActionPerformed(evt);
            }
        });

        jLabel6.setText("Feedback:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendAnswerQuiz))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startQuiz)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(notReadyQuiz))
                            .addComponent(quizAnswer)
                            .addComponent(quizQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(startQuiz)
                    .addComponent(notReadyQuiz))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(quizQuestions, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quizAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendAnswerQuiz)
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void startQuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startQuizActionPerformed
        firstQuestionReceived = false;
        
        StreamObserver<QuizAnswers> responseObserver = new StreamObserver<QuizAnswers>() {

            @Override
            public void onNext(QuizAnswers value) {
                if (!firstQuestionReceived) {
                quizQuestions.setText(value.getAnswer());
                firstQuestionReceived = true;
                awaitingAnswer = true;
            } else {
                if (value.getAnswerCorrect()) {
                    JOptionPane.showMessageDialog(StudentQuizFrame.this, "Correct!", "Quiz Feedback", JOptionPane.INFORMATION_MESSAGE);
                    quizQuestions.setText(""); 
                } else {
                    JOptionPane.showMessageDialog(StudentQuizFrame.this, "Incorrect. Correct answer: " + value.getAnswer(), "Quiz Feedback", JOptionPane.ERROR_MESSAGE);
                    quizQuestions.setText(""); 
                    awaitingAnswer = false;
                }
            }
        }


                @Override
                public void onError
                (Throwable t
                
                    ) {
                JOptionPane.showMessageDialog(null, "Error: " + t.getMessage());
                }

                @Override
                public void onCompleted
                
                    () {
                JOptionPane.showMessageDialog(null, "Quiz Completed.");
                }
            }
            ;

        requestObserver  = stub.smartQuiz(responseObserver);

        QuizQuestions initial = QuizQuestions.newBuilder().setQuestion("").build();
    requestObserver.onNext(initial);

    sendAnswerQuiz.setEnabled(true);    

    }//GEN-LAST:event_startQuizActionPerformed

    private void quizAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quizAnswerActionPerformed

    private void sendAnswerQuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendAnswerQuizActionPerformed

        String userAnswer = quizAnswer.getText().trim();
        if (!userAnswer.isEmpty() && awaitingAnswer) {//check if the user is pressing send on a empty field
            QuizQuestions answer = QuizQuestions.newBuilder().setQuestion(userAnswer).build();
            requestObserver.onNext(answer);
            quizAnswer.setText("");
            awaitingAnswer = false;
        } else if (userAnswer.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter an answer.");
        } else if (!awaitingAnswer) {
            JOptionPane.showMessageDialog(null, "Please wait for the next question.");
        }

    }//GEN-LAST:event_sendAnswerQuizActionPerformed

    private void notReadyQuizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notReadyQuizActionPerformed
        JOptionPane.showMessageDialog(null, "Ok. Let me know when you want to start.");
    }//GEN-LAST:event_notReadyQuizActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentQuizFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentQuizFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentQuizFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentQuizFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentQuizFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton notReadyQuiz;
    private javax.swing.JTextField quizAnswer;
    private javax.swing.JTextField quizQuestions;
    private javax.swing.JButton sendAnswerQuiz;
    private javax.swing.JButton startQuiz;
    // End of variables declaration//GEN-END:variables
}
